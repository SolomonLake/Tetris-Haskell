README - Tetris

Simple Tetris game

Will represent the current piece as a list of game.points, will also represent the top line of pieces this way.
When a current piece collides with the bottom, it will enter a list of pieces that make up the dropped pieces and will
stop being current piece.
Could maybe use grid for placed pieces.

tile = one segement of a piece

pieces list right now just holds all the pieces, this wouldn't work for typical tetris where
    pieces go away. could modify this later to accommadate.

Stuff to do on piece land:
update botLS with new bottom structure
instantiate new piece, make this piece current
	-random element :)
add old piece to list of placed pieces

Next TODO:
display next piece in top left
up key to place piece instantly
hold down arrows to move piece steadily
end game
    -game ends when instantiated piece is overlap with current pieces

grab bag instead of totally random




initialization:
ghc Tetris.hs -main-is Tetris
./Tetris


Sources:
Hackage
    -Everything

http://stackoverflow.com/questions/8416365/generate-a-random-integer-in-a-range-in-haskell
    -unsafe IO for random piece gen